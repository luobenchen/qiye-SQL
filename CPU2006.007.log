runspec v6674 started at Thu Jun  5 02:38:52 2025 on "liang-VMware-Virtual-Platform"
runspec is: /home/liang/gem5-stable/SPEC-cpu2006-1.2/bin/runspec
runspec: runspec --config=aarch64.cfg --action=build --tune=base int
toolset: linux-suse10-amd64

Locating benchmarks...found 31 benchmarks in 6 benchsets.
Reading config file '/home/liang/gem5-stable/SPEC-cpu2006-1.2/config/aarch64.cfg'
Running "specperl /home/liang/gem5-stable/SPEC-cpu2006-1.2/Docs/sysinfo" to gather system information.
Read 63 total lines from the sysinfo program.
Read 62 usable lines from the sysinfo program.

Loading "http://www.spec.org/auto/cpu2006/current_version" for version check: OK
Retrieving flags file (/home/liang/gem5-stable/SPEC-cpu2006-1.2/config/flags/Example-gcc4x-flags-revA.xml)...
Retrieving flags file (/home/liang/gem5-stable/SPEC-cpu2006-1.2/config/flags/Example-linux-platform-revA.xml)...
Verbosity = 5
Action    = build
Tune      = base
Ext       = gcc43-64bit
Size      = ref
Machine   = default
benchmarks= 400.perlbench,401.bzip2,403.gcc,429.mcf,445.gobmk,456.hmmer,458.sjeng,462.libquantum,464.h264ref,471.omnetpp,473.astar,483.xalancbmk,999.specrand
outputs   = asc,csv,html
username  = liang
Benchmarks selected: 400.perlbench, 401.bzip2, 403.gcc, 429.mcf, 445.gobmk, 456.hmmer, 458.sjeng, 462.libquantum, 464.h264ref, 471.omnetpp, 473.astar, 483.xalancbmk, 999.specrand
Compiling Binaries

------------------------------------------------------------------------
When checking options for /home/liang/gem5-stable/SPEC-cpu2006-1.2/benchspec/CPU2006/400.perlbench/exe/perlbench_base.gcc43-64bit, no MD5 sums were
  found in the config file.  They will be installed after build.
  Building 400.perlbench base gcc43-64bit default: (build_base_gcc43-64bit.0000)
Wrote to makefile '/home/liang/gem5-stable/SPEC-cpu2006-1.2/benchspec/CPU2006/400.perlbench/build/build_base_gcc43-64bit.0000/Makefile.deps':

# These are the build dependencies

$(addsuffix $(OBJ), $(basename perl.c)): perl.c EXTERN.h perl.h config.h spec_config.h embed.h handy.h iperlsys.h perlio.h regexp.h sv.h util.h form.h gv.h pad.h cv.h opnames.h op.h cop.h av.h hv.h mg.h scope.h warnings.h utf8.h perly.h thread.h pp.h proto.h pp_proto.h opcode.h embedvar.h intrpvar.h thrdvar.h perlvars.h patchlevel.h
$(addsuffix $(OBJ), $(basename universal.c)): universal.c perliol.h XSUB.h perlapi.h EXTERN.h perl.h config.h spec_config.h embed.h handy.h iperlsys.h perlio.h regexp.h sv.h util.h form.h gv.h pad.h cv.h opnames.h op.h cop.h av.h hv.h mg.h scope.h warnings.h utf8.h perly.h thread.h pp.h proto.h pp_proto.h opcode.h embedvar.h intrpvar.h thrdvar.h perlvars.h patchlevel.h
$(addsuffix $(OBJ), $(basename perlhost.h)): perlhost.h iperlsys.h vmem.h vdir.h perlio.h
$(addsuffix $(OBJ), $(basename doio.c)): doio.c EXTERN.h perl.h config.h spec_config.h embed.h handy.h iperlsys.h perlio.h regexp.h sv.h util.h form.h gv.h pad.h cv.h opnames.h op.h cop.h av.h hv.h mg.h scope.h warnings.h utf8.h perly.h thread.h pp.h proto.h pp_proto.h opcode.h embedvar.h intrpvar.h thrdvar.h perlvars.h patchlevel.h
$(addsuffix $(OBJ), $(basename win32thread.c)): win32thread.c win32.h win32iop.h EXTERN.h perl.h config.h spec_config.h embed.h handy.h iperlsys.h perlio.h regexp.h sv.h util.h form.h gv.h pad.h cv.h opnames.h op.h cop.h av.h hv.h mg.h scope.h warnings.h utf8.h perly.h thread.h pp.h proto.h pp_proto.h opcode.h embedvar.h intrpvar.h thrdvar.h perlvars.h patchlevel.h
$(addsuffix $(OBJ), $(basename locale.c)): locale.c EXTERN.h perl.h config.h spec_config.h embed.h handy.h iperlsys.h perlio.h regexp.h sv.h util.h form.h gv.h pad.h cv.h opnames.h op.h cop.h av.h hv.h mg.h scope.h warnings.h utf8.h perly.h thread.h pp.h proto.h pp_proto.h opcode.h embedvar.h intrpvar.h thrdvar.h perlvars.h patchlevel.h
$(addsuffix $(OBJ), $(basename op.c)): op.c keywords.h XSUB.h perlapi.h EXTERN.h perl.h config.h spec_config.h embed.h handy.h iperlsys.h perlio.h regexp.h sv.h util.h form.h gv.h pad.h cv.h opnames.h op.h cop.h av.h hv.h mg.h scope.h warnings.h utf8.h perly.h thread.h pp.h proto.h pp_proto.h opcode.h embedvar.h intrpvar.h thrdvar.h perlvars.h patchlevel.h
$(addsuffix $(OBJ), $(basename gv.c)): gv.c EXTERN.h perl.h config.h spec_config.h embed.h handy.h iperlsys.h perlio.h regexp.h sv.h util.h form.h gv.h pad.h cv.h opnames.h op.h cop.h av.h hv.h mg.h scope.h warnings.h utf8.h perly.h thread.h pp.h proto.h pp_proto.h opcode.h embedvar.h intrpvar.h thrdvar.h perlvars.h patchlevel.h
$(addsuffix $(OBJ), $(basename av.c)): av.c EXTERN.h perl.h config.h spec_config.h embed.h handy.h iperlsys.h perlio.h regexp.h sv.h util.h form.h gv.h pad.h cv.h opnames.h op.h cop.h av.h hv.h mg.h scope.h warnings.h utf8.h perly.h thread.h pp.h proto.h pp_proto.h opcode.h embedvar.h intrpvar.h thrdvar.h perlvars.h patchlevel.h
$(addsuffix $(OBJ), $(basename perly.c)): perly.c EXTERN.h perl.h config.h spec_config.h embed.h handy.h iperlsys.h perlio.h regexp.h sv.h util.h form.h gv.h pad.h cv.h opnames.h op.h cop.h av.h hv.h mg.h scope.h warnings.h utf8.h perly.h thread.h pp.h proto.h pp_proto.h opcode.h embedvar.h intrpvar.h thrdvar.h perlvars.h patchlevel.h
$(addsuffix $(OBJ), $(basename mg.c)): mg.c EXTERN.h perl.h config.h spec_config.h embed.h handy.h iperlsys.h perlio.h regexp.h sv.h util.h form.h gv.h pad.h cv.h opnames.h op.h cop.h av.h hv.h mg.h scope.h warnings.h utf8.h perly.h thread.h pp.h proto.h pp_proto.h opcode.h embedvar.h intrpvar.h thrdvar.h perlvars.h patchlevel.h
$(addsuffix $(OBJ), $(basename xsutils.c)): xsutils.c XSUB.h perlapi.h EXTERN.h perl.h config.h spec_config.h embed.h handy.h iperlsys.h perlio.h regexp.h sv.h util.h form.h gv.h pad.h cv.h opnames.h op.h cop.h av.h hv.h mg.h scope.h warnings.h utf8.h perly.h thread.h pp.h proto.h pp_proto.h opcode.h embedvar.h intrpvar.h thrdvar.h perlvars.h patchlevel.h
$(addsuffix $(OBJ), $(basename proto.h)): proto.h pp_proto.h
$(addsuffix $(OBJ), $(basename Base64.c)): Base64.c XSUB.h perlapi.h EXTERN.h perl.h config.h spec_config.h embed.h handy.h iperlsys.h perlio.h regexp.h sv.h util.h form.h gv.h pad.h cv.h opnames.h op.h cop.h av.h hv.h mg.h scope.h warnings.h utf8.h perly.h thread.h pp.h proto.h pp_proto.h opcode.h embedvar.h intrpvar.h thrdvar.h perlvars.h patchlevel.h
$(addsuffix $(OBJ), $(basename perllib.c)): perllib.c XSUB.h perlapi.h EXTERN.h perl.h config.h spec_config.h embed.h handy.h iperlsys.h perlio.h regexp.h sv.h util.h form.h gv.h pad.h cv.h opnames.h op.h cop.h av.h hv.h mg.h scope.h warnings.h utf8.h perly.h thread.h pp.h proto.h pp_proto.h opcode.h embedvar.h intrpvar.h thrdvar.h perlvars.h patchlevel.h
$(addsuffix $(OBJ), $(basename IO.c)): IO.c poll.h XSUB.h perlapi.h EXTERN.h perl.h config.h spec_config.h embed.h handy.h iperlsys.h perlio.h regexp.h sv.h util.h form.h gv.h pad.h cv.h opnames.h op.h cop.h av.h hv.h mg.h scope.h warnings.h utf8.h perly.h thread.h pp.h proto.h pp_proto.h opcode.h embedvar.h intrpvar.h thrdvar.h perlvars.h patchlevel.h
$(addsuffix $(OBJ), $(basename iperlsys.h)): iperlsys.h perlio.h
$(addsuffix $(OBJ), $(basename doop.c)): doop.c EXTERN.h perl.h config.h spec_config.h embed.h handy.h iperlsys.h perlio.h regexp.h sv.h util.h form.h gv.h pad.h cv.h opnames.h op.h cop.h av.h hv.h mg.h scope.h warnings.h utf8.h perly.h thread.h pp.h proto.h pp_proto.h opcode.h embedvar.h intrpvar.h thrdvar.h perlvars.h patchlevel.h
$(addsuffix $(OBJ), $(basename toke.c)): toke.c keywords.h EXTERN.h perl.h config.h spec_config.h embed.h handy.h iperlsys.h perlio.h regexp.h sv.h util.h form.h gv.h pad.h cv.h opnames.h op.h cop.h av.h hv.h mg.h scope.h warnings.h utf8.h perly.h thread.h pp.h proto.h pp_proto.h opcode.h embedvar.h intrpvar.h thrdvar.h perlvars.h patchlevel.h
$(addsuffix $(OBJ), $(basename Storable.c)): Storable.c XSUB.h perlapi.h EXTERN.h perl.h config.h spec_config.h embed.h handy.h iperlsys.h perlio.h regexp.h sv.h util.h form.h gv.h pad.h cv.h opnames.h op.h cop.h av.h hv.h mg.h scope.h warnings.h utf8.h perly.h thread.h pp.h proto.h pp_proto.h opcode.h embedvar.h intrpvar.h thrdvar.h perlvars.h patchlevel.h
$(addsuffix $(OBJ), $(basename Dumper.c)): Dumper.c XSUB.h perlapi.h EXTERN.h perl.h config.h spec_config.h embed.h handy.h iperlsys.h perlio.h regexp.h sv.h util.h form.h gv.h pad.h cv.h opnames.h op.h cop.h av.h hv.h mg.h scope.h warnings.h utf8.h perly.h thread.h pp.h proto.h pp_proto.h opcode.h embedvar.h intrpvar.h thrdvar.h perlvars.h patchlevel.h
$(addsuffix $(OBJ), $(basename perlapi.c)): perlapi.c perlapi.h EXTERN.h perl.h config.h spec_config.h embed.h handy.h iperlsys.h perlio.h regexp.h sv.h util.h form.h gv.h pad.h cv.h opnames.h op.h cop.h av.h hv.h mg.h scope.h warnings.h utf8.h perly.h thread.h pp.h proto.h pp_proto.h opcode.h embedvar.h intrpvar.h thrdvar.h perlvars.h patchlevel.h
$(addsuffix $(OBJ), $(basename perlmain.c)): perlmain.c EXTERN.h perl.h config.h spec_config.h embed.h handy.h iperlsys.h perlio.h regexp.h sv.h util.h form.h gv.h pad.h cv.h opnames.h op.h cop.h av.h hv.h mg.h scope.h warnings.h utf8.h perly.h thread.h pp.h proto.h pp_proto.h opcode.h embedvar.h intrpvar.h thrdvar.h perlvars.h patchlevel.h
$(addsuffix $(OBJ), $(basename hparser.c)): hparser.c hctype.h tokenpos.h
$(addsuffix $(OBJ), $(basename HiRes.c)): HiRes.c const-c.inc XSUB.h perlapi.h EXTERN.h perl.h config.h spec_config.h embed.h handy.h iperlsys.h perlio.h regexp.h sv.h util.h form.h gv.h pad.h cv.h opnames.h op.h cop.h av.h hv.h mg.h scope.h warnings.h utf8.h perly.h thread.h pp.h proto.h pp_proto.h opcode.h embedvar.h intrpvar.h thrdvar.h perlvars.h patchlevel.h
$(addsuffix $(OBJ), $(basename sv.c)): sv.c regcomp.h regnodes.h EXTERN.h perl.h config.h spec_config.h embed.h handy.h iperlsys.h perlio.h regexp.h sv.h util.h form.h gv.h pad.h cv.h opnames.h op.h cop.h av.h hv.h mg.h scope.h warnings.h utf8.h perly.h thread.h pp.h proto.h pp_proto.h opcode.h embedvar.h intrpvar.h thrdvar.h perlvars.h patchlevel.h
$(addsuffix $(OBJ), $(basename perlio.c)): perlio.c perlsdio.h perliol.h XSUB.h perlapi.h EXTERN.h perl.h config.h spec_config.h embed.h handy.h iperlsys.h perlio.h regexp.h sv.h util.h form.h gv.h pad.h cv.h opnames.h op.h cop.h av.h hv.h mg.h scope.h warnings.h utf8.h perly.h thread.h pp.h proto.h pp_proto.h opcode.h embedvar.h intrpvar.h thrdvar.h perlvars.h patchlevel.h
$(addsuffix $(OBJ), $(basename taint.c)): taint.c EXTERN.h perl.h config.h spec_config.h embed.h handy.h iperlsys.h perlio.h regexp.h sv.h util.h form.h gv.h pad.h cv.h opnames.h op.h cop.h av.h hv.h mg.h scope.h warnings.h utf8.h perly.h thread.h pp.h proto.h pp_proto.h opcode.h embedvar.h intrpvar.h thrdvar.h perlvars.h patchlevel.h
$(addsuffix $(OBJ), $(basename pad.c)): pad.c EXTERN.h perl.h config.h spec_config.h embed.h handy.h iperlsys.h perlio.h regexp.h sv.h util.h form.h gv.h pad.h cv.h opnames.h op.h cop.h av.h hv.h mg.h scope.h warnings.h utf8.h perly.h thread.h pp.h proto.h pp_proto.h opcode.h embedvar.h intrpvar.h thrdvar.h perlvars.h patchlevel.h
$(addsuffix $(OBJ), $(basename DynaLoader.c)): DynaLoader.c XSUB.h perlapi.h EXTERN.h perl.h config.h spec_config.h embed.h handy.h iperlsys.h perlio.h regexp.h sv.h util.h form.h gv.h pad.h cv.h opnames.h op.h cop.h av.h hv.h mg.h scope.h warnings.h utf8.h perly.h thread.h pp.h proto.h pp_proto.h opcode.h embedvar.h intrpvar.h thrdvar.h perlvars.h patchlevel.h
$(addsuffix $(OBJ), $(basename util.c)): util.c specrand.h EXTERN.h perl.h config.h spec_config.h embed.h handy.h iperlsys.h perlio.h regexp.h sv.h util.h form.h gv.h pad.h cv.h opnames.h op.h cop.h av.h hv.h mg.h scope.h warnings.h utf8.h perly.h thread.h pp.h proto.h pp_proto.h opcode.h embedvar.h intrpvar.h thrdvar.h perlvars.h patchlevel.h
$(addsuffix $(OBJ), $(basename regcomp.c)): regcomp.c INTERN.h regcomp.h regnodes.h EXTERN.h perl.h config.h spec_config.h embed.h handy.h iperlsys.h perlio.h regexp.h sv.h util.h form.h gv.h pad.h cv.h opnames.h op.h cop.h av.h hv.h mg.h scope.h warnings.h utf8.h perly.h thread.h pp.h proto.h pp_proto.h opcode.h embedvar.h intrpvar.h thrdvar.h perlvars.h patchlevel.h
$(addsuffix $(OBJ), $(basename utf8.c)): utf8.c EXTERN.h perl.h config.h spec_config.h embed.h handy.h iperlsys.h perlio.h regexp.h sv.h util.h form.h gv.h pad.h cv.h opnames.h op.h cop.h av.h hv.h mg.h scope.h warnings.h utf8.h perly.h thread.h pp.h proto.h pp_proto.h opcode.h embedvar.h intrpvar.h thrdvar.h perlvars.h patchlevel.h
$(addsuffix $(OBJ), $(basename miniperlmain.c)): miniperlmain.c EXTERN.h perl.h config.h spec_config.h embed.h handy.h iperlsys.h perlio.h regexp.h sv.h util.h form.h gv.h pad.h cv.h opnames.h op.h cop.h av.h hv.h mg.h scope.h warnings.h utf8.h perly.h thread.h pp.h proto.h pp_proto.h opcode.h embedvar.h intrpvar.h thrdvar.h perlvars.h patchlevel.h
$(addsuffix $(OBJ), $(basename scope.c)): scope.c EXTERN.h perl.h config.h spec_config.h embed.h handy.h iperlsys.h perlio.h regexp.h sv.h util.h form.h gv.h pad.h cv.h opnames.h op.h cop.h av.h hv.h mg.h scope.h warnings.h utf8.h perly.h thread.h pp.h proto.h pp_proto.h opcode.h embedvar.h intrpvar.h thrdvar.h perlvars.h patchlevel.h
$(addsuffix $(OBJ), $(basename XSUB.h)): XSUB.h perlapi.h
$(addsuffix $(OBJ), $(basename attrs.c)): attrs.c XSUB.h perlapi.h EXTERN.h perl.h config.h spec_config.h embed.h handy.h iperlsys.h perlio.h regexp.h sv.h util.h form.h gv.h pad.h cv.h opnames.h op.h cop.h av.h hv.h mg.h scope.h warnings.h utf8.h perly.h thread.h pp.h proto.h pp_proto.h opcode.h embedvar.h intrpvar.h thrdvar.h perlvars.h patchlevel.h
$(addsuffix $(OBJ), $(basename config.h)): config.h spec_config.h
$(addsuffix $(OBJ), $(basename win32io.c)): win32io.c perliol.h XSUB.h perlapi.h EXTERN.h perl.h config.h spec_config.h embed.h handy.h iperlsys.h perlio.h regexp.h sv.h util.h form.h gv.h pad.h cv.h opnames.h op.h cop.h av.h hv.h mg.h scope.h warnings.h utf8.h perly.h thread.h pp.h proto.h pp_proto.h opcode.h embedvar.h intrpvar.h thrdvar.h perlvars.h patchlevel.h
$(addsuffix $(OBJ), $(basename numeric.c)): numeric.c EXTERN.h perl.h config.h spec_config.h embed.h handy.h iperlsys.h perlio.h regexp.h sv.h util.h form.h gv.h pad.h cv.h opnames.h op.h cop.h av.h hv.h mg.h scope.h warnings.h utf8.h perly.h thread.h pp.h proto.h pp_proto.h opcode.h embedvar.h intrpvar.h thrdvar.h perlvars.h patchlevel.h
$(addsuffix $(OBJ), $(basename MD5.c)): MD5.c XSUB.h perlapi.h EXTERN.h perl.h config.h spec_config.h embed.h handy.h iperlsys.h perlio.h regexp.h sv.h util.h form.h gv.h pad.h cv.h opnames.h op.h cop.h av.h hv.h mg.h scope.h warnings.h utf8.h perly.h thread.h pp.h proto.h pp_proto.h opcode.h embedvar.h intrpvar.h thrdvar.h perlvars.h patchlevel.h
$(addsuffix $(OBJ), $(basename Cwd.c)): Cwd.c XSUB.h perlapi.h EXTERN.h perl.h config.h spec_config.h embed.h handy.h iperlsys.h perlio.h regexp.h sv.h util.h form.h gv.h pad.h cv.h opnames.h op.h cop.h av.h hv.h mg.h scope.h warnings.h utf8.h perly.h thread.h pp.h proto.h pp_proto.h opcode.h embedvar.h intrpvar.h thrdvar.h perlvars.h patchlevel.h
$(addsuffix $(OBJ), $(basename pp_pack.c)): pp_pack.c EXTERN.h perl.h config.h spec_config.h embed.h handy.h iperlsys.h perlio.h regexp.h sv.h util.h form.h gv.h pad.h cv.h opnames.h op.h cop.h av.h hv.h mg.h scope.h warnings.h utf8.h perly.h thread.h pp.h proto.h pp_proto.h opcode.h embedvar.h intrpvar.h thrdvar.h perlvars.h patchlevel.h
$(addsuffix $(OBJ), $(basename poll.c)): poll.c poll.h XSUB.h perlapi.h EXTERN.h perl.h config.h spec_config.h embed.h handy.h iperlsys.h perlio.h regexp.h sv.h util.h form.h gv.h pad.h cv.h opnames.h op.h cop.h av.h hv.h mg.h scope.h warnings.h utf8.h perly.h thread.h pp.h proto.h pp_proto.h opcode.h embedvar.h intrpvar.h thrdvar.h perlvars.h patchlevel.h
$(addsuffix $(OBJ), $(basename pp_hot.c)): pp_hot.c EXTERN.h perl.h config.h spec_config.h embed.h handy.h iperlsys.h perlio.h regexp.h sv.h util.h form.h gv.h pad.h cv.h opnames.h op.h cop.h av.h hv.h mg.h scope.h warnings.h utf8.h perly.h thread.h pp.h proto.h pp_proto.h opcode.h embedvar.h intrpvar.h thrdvar.h perlvars.h patchlevel.h
$(addsuffix $(OBJ), $(basename pp_sys.c)): pp_sys.c reentr.h EXTERN.h perl.h config.h spec_config.h embed.h handy.h iperlsys.h perlio.h regexp.h sv.h util.h form.h gv.h pad.h cv.h opnames.h op.h cop.h av.h hv.h mg.h scope.h warnings.h utf8.h perly.h thread.h pp.h proto.h pp_proto.h opcode.h embedvar.h intrpvar.h thrdvar.h perlvars.h patchlevel.h
$(addsuffix $(OBJ), $(basename globals.c)): globals.c INTERN.h perlapi.h perl.h config.h spec_config.h embed.h handy.h iperlsys.h perlio.h regexp.h sv.h util.h form.h gv.h pad.h cv.h opnames.h op.h cop.h av.h hv.h mg.h scope.h warnings.h utf8.h perly.h thread.h pp.h proto.h pp_proto.h opcode.h embedvar.h intrpvar.h thrdvar.h perlvars.h patchlevel.h
$(addsuffix $(OBJ), $(basename run.c)): run.c EXTERN.h perl.h config.h spec_config.h embed.h handy.h iperlsys.h perlio.h regexp.h sv.h util.h form.h gv.h pad.h cv.h opnames.h op.h cop.h av.h hv.h mg.h scope.h warnings.h utf8.h perly.h thread.h pp.h proto.h pp_proto.h opcode.h embedvar.h intrpvar.h thrdvar.h perlvars.h patchlevel.h
$(addsuffix $(OBJ), $(basename regexec.c)): regexec.c regcomp.h regnodes.h EXTERN.h perl.h config.h spec_config.h embed.h handy.h iperlsys.h perlio.h regexp.h sv.h util.h form.h gv.h pad.h cv.h opnames.h op.h cop.h av.h hv.h mg.h scope.h warnings.h utf8.h perly.h thread.h pp.h proto.h pp_proto.h opcode.h embedvar.h intrpvar.h thrdvar.h perlvars.h patchlevel.h
$(addsuffix $(OBJ), $(basename Hostname.c)): Hostname.c XSUB.h perlapi.h EXTERN.h perl.h config.h spec_config.h embed.h handy.h iperlsys.h perlio.h regexp.h sv.h util.h form.h gv.h pad.h cv.h opnames.h op.h cop.h av.h hv.h mg.h scope.h warnings.h utf8.h perly.h thread.h pp.h proto.h pp_proto.h opcode.h embedvar.h intrpvar.h thrdvar.h perlvars.h patchlevel.h
$(addsuffix $(OBJ), $(basename Peek.c)): Peek.c XSUB.h perlapi.h EXTERN.h perl.h config.h spec_config.h embed.h handy.h iperlsys.h perlio.h regexp.h sv.h util.h form.h gv.h pad.h cv.h opnames.h op.h cop.h av.h hv.h mg.h scope.h warnings.h utf8.h perly.h thread.h pp.h proto.h pp_proto.h opcode.h embedvar.h intrpvar.h thrdvar.h perlvars.h patchlevel.h
$(addsuffix $(OBJ), $(basename win32sck.c)): win32sck.c win32iop.h EXTERN.h perl.h config.h spec_config.h embed.h handy.h iperlsys.h perlio.h regexp.h sv.h util.h form.h gv.h pad.h cv.h opnames.h op.h cop.h av.h hv.h mg.h scope.h warnings.h utf8.h perly.h thread.h pp.h proto.h pp_proto.h opcode.h embedvar.h intrpvar.h thrdvar.h perlvars.h patchlevel.h
$(addsuffix $(OBJ), $(basename pp_ctl.c)): pp_ctl.c EXTERN.h perl.h config.h spec_config.h embed.h handy.h iperlsys.h perlio.h regexp.h sv.h util.h form.h gv.h pad.h cv.h opnames.h op.h cop.h av.h hv.h mg.h scope.h warnings.h utf8.h perly.h thread.h pp.h proto.h pp_proto.h opcode.h embedvar.h intrpvar.h thrdvar.h perlvars.h patchlevel.h
$(addsuffix $(OBJ), $(basename hv.c)): hv.c EXTERN.h perl.h config.h spec_config.h embed.h handy.h iperlsys.h perlio.h regexp.h sv.h util.h form.h gv.h pad.h cv.h opnames.h op.h cop.h av.h hv.h mg.h scope.h warnings.h utf8.h perly.h thread.h pp.h proto.h pp_proto.h opcode.h embedvar.h intrpvar.h thrdvar.h perlvars.h patchlevel.h
$(addsuffix $(OBJ), $(basename Parser.c)): Parser.c hparser.h parser-util.c hparser.c hctype.h tokenpos.h XSUB.h perlapi.h EXTERN.h perl.h config.h spec_config.h embed.h handy.h iperlsys.h perlio.h regexp.h sv.h util.h form.h gv.h pad.h cv.h opnames.h op.h cop.h av.h hv.h mg.h scope.h warnings.h utf8.h perly.h thread.h pp.h proto.h pp_proto.h opcode.h embedvar.h intrpvar.h thrdvar.h perlvars.h patchlevel.h
$(addsuffix $(OBJ), $(basename pp_sort.c)): pp_sort.c specrand.h EXTERN.h perl.h config.h spec_config.h embed.h handy.h iperlsys.h perlio.h regexp.h sv.h util.h form.h gv.h pad.h cv.h opnames.h op.h cop.h av.h hv.h mg.h scope.h warnings.h utf8.h perly.h thread.h pp.h proto.h pp_proto.h opcode.h embedvar.h intrpvar.h thrdvar.h perlvars.h patchlevel.h
$(addsuffix $(OBJ), $(basename deb.c)): deb.c EXTERN.h perl.h config.h spec_config.h embed.h handy.h iperlsys.h perlio.h regexp.h sv.h util.h form.h gv.h pad.h cv.h opnames.h op.h cop.h av.h hv.h mg.h scope.h warnings.h utf8.h perly.h thread.h pp.h proto.h pp_proto.h opcode.h embedvar.h intrpvar.h thrdvar.h perlvars.h patchlevel.h
$(addsuffix $(OBJ), $(basename pp.c)): pp.c reentr.h keywords.h specrand.h EXTERN.h perl.h config.h spec_config.h embed.h handy.h iperlsys.h perlio.h regexp.h sv.h util.h form.h gv.h pad.h cv.h opnames.h op.h cop.h av.h hv.h mg.h scope.h warnings.h utf8.h perly.h thread.h pp.h proto.h pp_proto.h opcode.h embedvar.h intrpvar.h thrdvar.h perlvars.h patchlevel.h
$(addsuffix $(OBJ), $(basename win32.c)): win32.c win32iop.h XSUB.h perlapi.h EXTERN.h perl.h config.h spec_config.h embed.h handy.h iperlsys.h perlio.h regexp.h sv.h util.h form.h gv.h pad.h cv.h opnames.h op.h cop.h av.h hv.h mg.h scope.h warnings.h utf8.h perly.h thread.h pp.h proto.h pp_proto.h opcode.h embedvar.h intrpvar.h thrdvar.h perlvars.h patchlevel.h
$(addsuffix $(OBJ), $(basename dump.c)): dump.c regcomp.h regnodes.h EXTERN.h perl.h config.h spec_config.h embed.h handy.h iperlsys.h perlio.h regexp.h sv.h util.h form.h gv.h pad.h cv.h opnames.h op.h cop.h av.h hv.h mg.h scope.h warnings.h utf8.h perly.h thread.h pp.h proto.h pp_proto.h opcode.h embedvar.h intrpvar.h thrdvar.h perlvars.h patchlevel.h
# End dependencies
Wrote to makefile '/home/liang/gem5-stable/SPEC-cpu2006-1.2/benchspec/CPU2006/400.perlbench/build/build_base_gcc43-64bit.0000/Makefile.spec':
TUNE=base
EXT=gcc43-64bit
NUMBER=400
NAME=perlbench
SOURCES= av.c deb.c doio.c doop.c dump.c globals.c gv.c hv.c locale.c mg.c \
	 numeric.c op.c pad.c perl.c perlapi.c perlio.c perlmain.c perly.c pp.c \
	 pp_ctl.c pp_hot.c pp_pack.c pp_sort.c pp_sys.c regcomp.c regexec.c run.c \
	 scope.c sv.c taint.c toke.c universal.c utf8.c util.c xsutils.c Base64.c \
	 Cwd.c Dumper.c HiRes.c IO.c Peek.c attrs.c poll.c stdio.c DynaLoader.c \
	 MD5.c Storable.c Parser.c specrand.c Hostname.c Opcode.c
EXEBASE=perlbench
NEED_MATH=yes
BENCHLANG=C
ONESTEP=
CONESTEP=

BENCH_FLAGS      = -DPERL_CORE
CC               = /usr/bin/aarch64-linux-gnu-gcc-13
COPTIMIZE        = -O2 -fno-strict-aliasing -static
CPORTABILITY     = -DSPEC_CPU_LINUX_X64
CXX              = /usr/bin/aarch64-linux-gnu-g++-13
CXXOPTIMIZE      = -O2 -fno-strict-aliasing -static
FC               = /usr/bin/aarch64-linux-gnu-gfortran-13
FOPTIMIZE        = -O2 -fno-strict-aliasing -static
FPBASE           = yes
OS               = unix
PORTABILITY      = -DSPEC_CPU_LP64
absolutely_no_locking = 0
abstol           = 
action           = build
allow_extension_override = 0
backup_config    = 1
baseexe          = perlbench
basepeak         = 1
benchdir         = benchspec
benchmark        = 400.perlbench
binary           = 
bindir           = exe
build_in_build_dir = 1
builddir         = build
bundleaction     = 
bundlename       = 
calctol          = 0
changedmd5       = 0
check_integrity  = 1
check_md5        = 1
check_version    = 1
clean_between_builds = no
command_add_redirect = 0
commanderrfile   = speccmds.err
commandexe       = perlbench_base.gcc43-64bit
commandfile      = speccmds.cmd
commandoutfile   = speccmds.out
commandstdoutfile = speccmds.stdout
compareerrfile   = compare.err
comparefile      = compare.cmd
compareoutfile   = compare.out
comparestdoutfile = compare.stdout
compile_error    = 0
compwhite        = 
configdir        = config
configpath       = /home/liang/gem5-stable/SPEC-cpu2006-1.2/config/aarch64.cfg
copies           = 1
datadir          = data
default_size     = ref
delay            = 0
deletebinaries   = 0
deletework       = 0
dependent_workloads = 0
difflines        = 10
dirprot          = 511
endian           = 12345678
env_vars         = 0
exitvals         = spec_exit
expand_notes     = 0
expid            = 
ext              = gcc43-64bit
fake             = 0
feedback         = 1
flag_url_base    = http://www.spec.org/auto/cpu2006/flags/
floatcompare     = 
help             = 0
http_proxy       = 
http_timeout     = 30
hw_avail         = Dec-9999
hw_cpu_char      = 
hw_cpu_mhz       = 9999
hw_cpu_name      = 13th Gen Intel Core i7-13700H
hw_disk          = 30 GB  add more disk info here
hw_fpu           = Integrated
hw_memory001     = 9.514 GB fixme: If using DDR3, format is:
hw_memory002     = 'N GB (M x N GB nRxn PCn-nnnnnR-n, ECC)'
hw_model         = System Model Name
hw_nchips        = 2
hw_ncores        = number of cores enabled
hw_ncoresperchip = number of cores manufactured into each chip
hw_ncpuorder     = 1,2 chips
hw_nthreadspercore = number of threads enabled per core
hw_ocache        = None
hw_other         = None
hw_pcache        = 9999 KB I + 9999 KB D on chip per core
hw_scache        = 9999 KB I+D on chip per core
hw_tcache        = 9999 MB I+D on chip per chip
hw_vendor        = System Vendor
ignore_errors    = yes
ignore_sigint    = 0
ignorecase       = 
info_wrap_columns = 50
inputdir         = input
iteration        = -1
iterations       = 3
keeptmp          = 0
license_num      = 0
line_width       = 0
locking          = 1
log              = CPU2006
log_line_width   = 0
log_timestamp    = 0
logname          = /home/liang/gem5-stable/SPEC-cpu2006-1.2/result/CPU2006.007.log
lognum           = 007
mach             = default
mail_reports     = all
mailcompress     = 0
mailmethod       = smtp
mailport         = 25
mailserver       = 127.0.0.1
mailto           = 
make             = specmake
make_no_clobber  = 0
makeflags        = 
max_active_compares = 0
mean_anyway      = 0
min_report_runs  = 3
minimize_builddirs = 0
minimize_rundirs = 0
name             = perlbench
need_math        = yes
no_input_handler = close
no_monitor       = 
note_preenv      = 0
notes_os_000     = 'ulimit -s unlimited' was used to set environment stack size
notes_plat_sysinfo_000 =  Sysinfo program /home/liang/gem5-stable/SPEC-cpu2006-1.2/Docs/sysinfo
notes_plat_sysinfo_005 =  $Rev: 6775 $ $Date:: 2011-08-16 \#$ 8787f7622badcf24e01c368b1db4377c
notes_plat_sysinfo_010 =  running on liang-VMware-Virtual-Platform Thu Jun  5 02:38:53 2025
notes_plat_sysinfo_015 = 
notes_plat_sysinfo_020 =  This section contains SUT (System Under Test) info as seen by
notes_plat_sysinfo_025 =  some common utilities.  To remove or add to this section, see:
notes_plat_sysinfo_030 =    http://www.spec.org/cpu2006/Docs/config.html\#sysinfo
notes_plat_sysinfo_035 = 
notes_plat_sysinfo_040 =  From /proc/cpuinfo
notes_plat_sysinfo_045 =     model name : 13th Gen Intel(R) Core(TM) i7-13700H
notes_plat_sysinfo_050 =        2 "physical id"s (chips)
notes_plat_sysinfo_055 =        8 "processors"
notes_plat_sysinfo_060 =     cores, siblings (Caution: counting these is hw and system dependent.  The
notes_plat_sysinfo_065 =     following excerpts from /proc/cpuinfo might not be reliable.  Use with
notes_plat_sysinfo_070 =     caution.)
notes_plat_sysinfo_075 =        cpu cores : 4
notes_plat_sysinfo_080 =        siblings  : 4
notes_plat_sysinfo_085 =        physical 0: cores 0 1 2 3
notes_plat_sysinfo_090 =        physical 1: cores 0 1 2 3
notes_plat_sysinfo_095 =     cache size : 24576 KB
notes_plat_sysinfo_100 = 
notes_plat_sysinfo_105 =  From /proc/meminfo
notes_plat_sysinfo_110 =     MemTotal:        9976520 kB
notes_plat_sysinfo_115 =     HugePages_Total:       0
notes_plat_sysinfo_120 =     Hugepagesize:       2048 kB
notes_plat_sysinfo_125 = 
notes_plat_sysinfo_130 =  /usr/bin/lsb_release -d
notes_plat_sysinfo_135 =     Ubuntu 24.04.2 LTS
notes_plat_sysinfo_140 = 
notes_plat_sysinfo_145 =  From /etc/*release* /etc/*version*
notes_plat_sysinfo_150 =     debian_version: trixie/sid
notes_plat_sysinfo_155 =     os-release:
notes_plat_sysinfo_160 =        PRETTY_NAME="Ubuntu 24.04.2 LTS"
notes_plat_sysinfo_165 =        NAME="Ubuntu"
notes_plat_sysinfo_170 =        VERSION_ID="24.04"
notes_plat_sysinfo_175 =        VERSION="24.04.2 LTS (Noble Numbat)"
notes_plat_sysinfo_180 =        VERSION_CODENAME=noble
notes_plat_sysinfo_185 =        ID=ubuntu
notes_plat_sysinfo_190 =        ID_LIKE=debian
notes_plat_sysinfo_195 =        HOME_URL="https://www.ubuntu.com/"
notes_plat_sysinfo_200 = 
notes_plat_sysinfo_205 =  uname -a:
notes_plat_sysinfo_210 =     Linux liang-VMware-Virtual-Platform 6.11.0-26-generic \#26~24.04.1-Ubuntu SMP
notes_plat_sysinfo_215 =     PREEMPT_DYNAMIC Thu Apr 17 19:20:47 UTC 2 x86_64 x86_64 x86_64 GNU/Linux
notes_plat_sysinfo_220 = 
notes_plat_sysinfo_225 =  run-level 5 Jun 5 01:18
notes_plat_sysinfo_230 = 
notes_plat_sysinfo_235 =  SPEC is set to: /home/liang/gem5-stable/SPEC-cpu2006-1.2
notes_plat_sysinfo_240 =     Filesystem     Type  Size  Used Avail Use% Mounted on
notes_plat_sysinfo_245 =     /dev/sda2      ext4   30G   23G  5.4G  81% /
notes_plat_sysinfo_250 = 
notes_plat_sysinfo_255 =  (End of data from sysinfo program)
notes_submit_000 = 'numactl' was used to bind copies to the cores.
notes_submit_005 = See the configuration file for details.
notes_wrap_columns = 0
notes_wrap_indent =   
num              = 400
obiwan           = 
os_exe_ext       = 
output           = asc
output_format    = asc,csv,html
output_root      = 
outputdir        = output
parallel_setup   = 1
parallel_setup_prefork = 
parallel_setup_type = fork
parallel_test    = 0
parallel_test_submit = 0
parallel_test_workloads = 
path             = /home/liang/gem5-stable/SPEC-cpu2006-1.2/benchspec/CPU2006/400.perlbench
plain_train      = 1
power            = 0
preenv           = 1
prefix           = 
prepared_by      = liang  (is never output, only tags rawfile)
ranks            = 1
rate             = 0
realuser         = your name here
rebuild          = 0
reftime          = reftime
reltol           = 
reportable       = yes
resultdir        = result
review           = 0
run              = all
rundir           = run
runspec          = /home/liang/gem5-stable/SPEC-cpu2006-1.2/bin/runspec --config=aarch64.cfg --action=build --tune=base int
safe_eval        = 1
section_specifier_fatal = 1
sendmail         = /usr/sbin/sendmail
setpgrp_enabled  = 1
setprocgroup     = 1
setup_error      = 0
shrate           = 0
sigint           = 2
size             = ref
size_class       = ref
skipabstol       = 
skipobiwan       = 
skipreltol       = 
skiptol          = 
smarttune        = base
specdiff         = specdiff
specmake         = Makefile.YYYtArGeTYYYspec
specrun          = specinvoke
speed            = 0
srcalt           = 
srcdir           = src
srcsource        = /home/liang/gem5-stable/SPEC-cpu2006-1.2/benchspec/CPU2006/400.perlbench/src
stagger          = 10
strict_rundir_verify = 1
submit_default   = $BIND $command
sw_avail         = May-2010
sw_base_ptrsize  = 64-bit
sw_compiler      = gcc, g++ & gfortran 4.3.4
sw_file          = ext4
sw_os001         = Ubuntu 24.04.2 LTS
sw_os002         = 6.11.0-26-generic
sw_other         = None
sw_peak_ptrsize  = 64-bit
sw_state         = Run level 5 (add definition here)
sysinfo_program  = specperl /home/liang/gem5-stable/SPEC-cpu2006-1.2/Docs/sysinfo
table            = 1
teeout           = yes
teerunout        = yes
test_date        = Jun-2025
test_sponsor     = Test Sponsor (Optional, defaults to hw_vendor)
tester           = (Optional, defaults to hw_vendor)
top              = /home/liang/gem5-stable/SPEC-cpu2006-1.2
train_with       = train
tune             = base
uid              = 1000
unbuffer         = 1
update-flags     = 0
use_submit_for_speed = 0
username         = liang
vendor           = anon
vendor_makefiles = 0
verbose          = 5
version          = 0
version_url      = http://www.spec.org/auto/cpu2006/current_version
worklist         = list
OUTPUT_RMFILES   = diffmail.2.550.15.24.23.100.out perfect.b.3.out scrabbl.out splitmail.535.13.25.24.1091.out suns.out validate
  Compile for '400.perlbench' started at: Thu Jun  5 02:38:54 2025 (1749062334)
Issuing make.clean command 'specmake clean'
specmake clean 2> make.clean.err | tee make.clean.out
Start make.clean command: Thu Jun  5 02:38:54 2025 (1749062334)
rm -rf *.o  diffmail.2.550.15.24.23.100.out perfect.b.3.out scrabbl.out splitmail.535.13.25.24.1091.out suns.out validate
find . \( -name \*.o -o -name '*.fppized.f*' -o -name '*.i' -o -name '*.mod' \) -print | xargs rm -rf
rm -rf perlbench
rm -rf perlbench.exe
rm -rf core
rm -rf 
Stop make.clean command: Thu Jun  5 02:38:54 2025 (1749062334)
Elapsed time for make.clean command: 00:00:00 (0)
Issuing make command 'specmake build'
specmake build 2> make.err | tee make.out
Start make command: Thu Jun  5 02:38:54 2025 (1749062334)
/usr/bin/aarch64-linux-gnu-gcc-13 -c -o av.o -DSPEC_CPU -DNDEBUG -DPERL_CORE   -O2 -fno-strict-aliasing -static       -DSPEC_CPU_LP64 -DSPEC_CPU_LINUX_X64        av.c
In file included from /usr/aarch64-linux-gnu/include/stdio.h:980,
                 from perlio.h:65,
                 from iperlsys.h:51,
                 from perl.h:2585,
                 from av.c:22:
/usr/aarch64-linux-gnu/include/bits/stdio2.h: In function 'sprintf':
/usr/aarch64-linux-gnu/include/bits/stdio2.h:30:10: error: invalid use of '__builtin_va_arg_pack ()'
   30 |   return __builtin___sprintf_chk (__s, __USE_FORTIFY_LEVEL - 1,
      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   31 |                                   __glibc_objsize (__s), __fmt,
      |                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   32 |                                   __va_arg_pack ());
      |                                   ~~~~~~~~~~~~~~~~~
/usr/aarch64-linux-gnu/include/bits/stdio2.h: In function 'snprintf':
/usr/aarch64-linux-gnu/include/bits/stdio2.h:54:10: error: invalid use of '__builtin_va_arg_pack ()'
   54 |   return __builtin___snprintf_chk (__s, __n, __USE_FORTIFY_LEVEL - 1,
      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   55 |                                    __glibc_objsize (__s), __fmt,
      |                                    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   56 |                                    __va_arg_pack ());
      |                                    ~~~~~~~~~~~~~~~~~
/usr/aarch64-linux-gnu/include/bits/stdio2.h: In function 'fprintf':
/usr/aarch64-linux-gnu/include/bits/stdio2.h:79:10: error: invalid use of '__builtin_va_arg_pack ()'
   79 |   return __fprintf_chk (__stream, __USE_FORTIFY_LEVEL - 1, __fmt,
      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   80 |                         __va_arg_pack ());
      |                         ~~~~~~~~~~~~~~~~~
/usr/aarch64-linux-gnu/include/bits/stdio2.h: In function 'printf':
/usr/aarch64-linux-gnu/include/bits/stdio2.h:86:10: error: invalid use of '__builtin_va_arg_pack ()'
   86 |   return __printf_chk (__USE_FORTIFY_LEVEL - 1, __fmt, __va_arg_pack ());
      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/aarch64-linux-gnu/include/bits/stdio2.h: In function 'dprintf':
/usr/aarch64-linux-gnu/include/bits/stdio2.h:117:10: error: invalid use of '__builtin_va_arg_pack ()'
  117 |   return __dprintf_chk (__fd, __USE_FORTIFY_LEVEL - 1, __fmt,
      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  118 |                         __va_arg_pack ());
      |                         ~~~~~~~~~~~~~~~~~
In file included from /usr/aarch64-linux-gnu/include/features.h:502,
                 from /usr/aarch64-linux-gnu/include/sys/types.h:25,
                 from perl.h:384:
/usr/aarch64-linux-gnu/include/bits/fcntl2.h: In function 'open':
/usr/aarch64-linux-gnu/include/bits/fcntl2.h:43:7: error: invalid use of '__builtin_va_arg_pack_len ()'
   43 |   if (__va_arg_pack_len () > 1)
      |       ^~~~~~~~~~~~~~~~~
/usr/aarch64-linux-gnu/include/bits/fcntl2.h:56:7: error: invalid use of '__builtin_va_arg_pack_len ()'
   56 |   if (__va_arg_pack_len () < 1)
      |       ^~~~~~~~~~~~~~~~~
In file included from /usr/aarch64-linux-gnu/include/fcntl.h:342,
                 from /usr/aarch64-linux-gnu/include/sys/file.h:24,
                 from perl.h:4500:
/usr/aarch64-linux-gnu/include/bits/fcntl2.h:59:10: error: invalid use of '__builtin_va_arg_pack ()'
   59 |   return __open_alias (__path, __oflag, __va_arg_pack ());
      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/aarch64-linux-gnu/include/bits/fcntl2.h: In function 'openat':
/usr/aarch64-linux-gnu/include/bits/fcntl2.h:119:7: error: invalid use of '__builtin_va_arg_pack_len ()'
  119 |   if (__va_arg_pack_len () > 1)
      |       ^~~~~~~~~~~~~~~~~
/usr/aarch64-linux-gnu/include/bits/fcntl2.h:132:7: error: invalid use of '__builtin_va_arg_pack_len ()'
  132 |   if (__va_arg_pack_len () < 1)
      |       ^~~~~~~~~~~~~~~~~
/usr/aarch64-linux-gnu/include/bits/fcntl2.h:135:10: error: invalid use of '__builtin_va_arg_pack ()'
  135 |   return __openat_alias (__fd, __path, __oflag, __va_arg_pack ());
      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
specmake: *** [av.o] Error 1
Stop make command: Thu Jun  5 02:38:54 2025 (1749062334)
Elapsed time for make command: 00:00:00 (0)
Error with make 'specmake build': check file '/home/liang/gem5-stable/SPEC-cpu2006-1.2/benchspec/CPU2006/400.perlbench/build/build_base_gcc43-64bit.0000/make.err'
  Command returned exit code 2
  Error with make!
  Compile for '400.perlbench' ended at: Thu Jun  5 02:38:54 2025 (1749062334)
  Elapsed compile for '400.perlbench': 00:00:00 (0)
*** Error building 400.perlbench

------------------------------------------------------------------------
  Up to date 401.bzip2 base gcc43-64bit default

------------------------------------------------------------------------
  Up to date 403.gcc base gcc43-64bit default

------------------------------------------------------------------------
  Up to date 429.mcf base gcc43-64bit default

------------------------------------------------------------------------
  Up to date 445.gobmk base gcc43-64bit default

------------------------------------------------------------------------
  Up to date 456.hmmer base gcc43-64bit default

------------------------------------------------------------------------
  Up to date 458.sjeng base gcc43-64bit default

------------------------------------------------------------------------
  Up to date 462.libquantum base gcc43-64bit default

------------------------------------------------------------------------
  Up to date 464.h264ref base gcc43-64bit default

------------------------------------------------------------------------
  Up to date 471.omnetpp base gcc43-64bit default

------------------------------------------------------------------------
  Up to date 473.astar base gcc43-64bit default

------------------------------------------------------------------------
  Up to date 483.xalancbmk base gcc43-64bit default

------------------------------------------------------------------------
  Up to date 999.specrand base gcc43-64bit default

Build errors: 400.perlbench(base; CE)

Build Complete

The log for this run is in /home/liang/gem5-stable/SPEC-cpu2006-1.2/result/CPU2006.007.log
The debug log for this run is in /home/liang/gem5-stable/SPEC-cpu2006-1.2/result/CPU2006.007.log.debug

runspec finished at Thu Jun  5 02:38:57 2025; 5 total seconds elapsed
